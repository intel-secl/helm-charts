# Default values for sqvs

nameOverride: "" # The name for SQVS chart<br> (Default: `.Chart.Name`)
controlPlaneHostname: <user input> # K8s control plane IP/Hostname<br> (**REQUIRED**)

# Warning: Ensure that the naming is applied consistently for all dependent services when modifying nameOverride
# TODO: Services should be be able to be deployed in different namespaces
dependentServices: # The dependent Service Name for deploying  SQVS chart, default is the chart name and override is from nameOverride value.
  cms: cms
  aas: aas
  scs: scs

config:
  envVarPrefix: SQVS
  sgxTrustedRootCaPath: /tmp/trusted_rootca.pem
  signQuoteResponse: false
  responseSigningKeyLength: 3072
  includeToken: true

# The values provided for serviceUsername and servicePassword here should be same as that of provided for aas.sqvs.secret.serviceUsername and aas.sqvs.secret.servicePassword in values.yaml file for aas-manager chart
secret:
  serviceUsername:  # Service Username for SQVS
  servicePassword:  # Service Password for SQVS

aas:
  url: <user input> # Please update the url section if sqvs is exposed via ingress
  secret:
    adminUsername:  # Admin Username for AAS
    adminPassword:  # Admin Password for AAS

image:
  svc:
    name: <user input> # The image name with which SQVS image is pushed to registry<br> (**REQUIRED**)
    pullPolicy: Always # The pull policy for pulling from container registry for SQVS<br> (Allowed values: `Always`/`IfNotPresent`)
    imagePullSecret: <user input> # The image pull secret for authenticating with image registry, can be left empty if image registry does not require authentication
    initName: <user input> # The image name of init container
  aasManager:
    name: <user input> # The image name with which AAS-Manager image is pushed to registry<br> (**REQUIRED**)
    pullPolicy: Always # The pull policy for pulling from container registry for AAS-Manager<br> (Allowed values: `Always`/`IfNotPresent`)
    imagePullSecret: <user input> # The image pull secret for authenticating with image registry, can be left empty if image registry does not require authentication

storage:
  nfs:
    server: <user input> # The NFS Server IP/Hostname<br> (**REQUIRED**)
    reclaimPolicy: Retain # The reclaim policy for NFS<br> (Allowed values: `Retain`/)
    accessModes: ReadWriteMany # The access modes for NFS<br> (Allowed values: `ReadWriteMany`)
    path: /mnt/nfs_share # The path for storing persistent data on NFS
    dbSize: 5Gi # The DB size for storing DB data for SQVS in NFS path
    configSize: 10Mi # The configuration size for storing config for SQVS in NFS path
    logsSize: 1Gi # The logs size for storing logs for SQVS in NFS path
    baseSize: 6.1Gi # The base volume size (configSize + logSize + dbSize)

securityContext:
  sqvsdbInit: # The fsGroup id for init containers for SQVS DB
    fsGroup: 2000
  sqvsdb: # The security content for SQVS DB Service Pod
    runAsUser: 1001
    runAsGroup: 1001
  sqvsInit: # The fsGroup id for init containers for SQVS
    fsGroup: 1001
  sqvs: # The security content for SQVS Pod
    runAsUser: 1001
    runAsGroup: 1001
    capabilities:
      drop:
        - all
    allowPrivilegeEscalation: false

service:
  directoryName: sqvs
  cms:
    containerPort: 8445 # The containerPort on which CMS can listen
  aas: 
    containerPort: 8444 # The containerPort on which AAS can listen
    port: 30444 # The externally exposed NodePort on which AAS can listen to external traffic
  scs:
    containerPort: 9000 # The containerPort on which SCS can listen 
    port: 30502 # The externally exposed NodePort on which SCS can listen to external traffic    
  sqvs:
    containerPort: "12000" # The containerPort on which SQVS can listen 
    port: "30503" # The externally exposed NodePort on which SQVS can listen to external traffic
  ingress:
    enable: false # Accept true or false to notify ingress rules are enable or disabled

log:
  loglevel: info
  enableConsoleLog: y