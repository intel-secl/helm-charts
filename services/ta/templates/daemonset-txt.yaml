{{- include "factory.headers" . }}
---
{{- include "factory.daemonSetCommonHeaderSpec" . }}
metadata:
  name: {{ include "factory.name" . }}-txt
{{- include "factory.daemonSetCommonSpec" . }}
    spec:
      {{- if .Values.global }}
      {{- if .Values.global.image.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.imagePullSecret }}
      {{- end }}
      {{- else }}
      {{- if .Values.image.svc.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.svc.imagePullSecret }}
      {{- end }}
      {{- end }}
      affinity:
        {{- include "factory.affinityAgents" . | nindent 8 }}
                  values:
                  - "{{ .Values.nodeLabel.txt }}"
      serviceAccountName: {{ .Release.Namespace }}
      initContainers:
        - name: wait-for-hvs
          {{- include "factory.imageInitContainer" . | indent 10 }}
          env:
            {{- if .Values.global }}
              {{- if .Values.global.proxyEnabled }}
              {{- include "factory.globalProxy" . | nindent 12 }}
              {{- end }}
            {{- end }}
            - name: URL
            {{- if .Values.global }}
              value: {{ .Values.global.hvsUrl }}/version
            {{- else }}
              value: https://{{ .Values.controlPlaneHostname }}:{{ .Values.service.hvs.port }}/hvs/v2/version
            {{- end }}
            - name: VERSION
              value: {{ .Chart.AppVersion }}
            - name: DEPEDENT_SERVICE_NAME
              value: {{.Values.dependentServices.hvs }}
            - name: COMPONENT
              value: {{ .Values.dependentServices.hvs }}
        {{- if .Values.global }}
        {{- if .Values.global.versionUpgrade }}
        - name: {{ include "factory.name" . }}-backup
          image: busybox:1.32
          command: ["/bin/sh", "-c"]
          args:
            - >
              {{- if eq .Values.global.currentVersion "v4.2.0" }}
              cp -r /opt/{{ .Values.service.directoryName }}/configuration/* /etc/{{ .Values.service.directoryName }}/{{.Chart.AppVersion }}/ &&
              cp -r /opt/{{ .Values.service.directoryName }}/configuration/.setup_done /etc/{{ .Values.service.directoryName }}/{{.Chart.AppVersion }}/
              {{- else }}
              cp -r /etc/{{ .Values.service.directoryName }}/{{ .Values.global.currentVersion }}/* /etc/{{ .Values.service.directoryName }}/{{ .Chart.AppVersion }}/ &&
              cp -r /etc/{{ .Values.service.directoryName }}/{{ .Values.global.currentVersion }}/.setup_done /etc/{{ .Values.service.directoryName }}/{{.Chart.AppVersion }}/ &&
              {{- end }}
          volumeMounts:
          {{- include "factory.volumeMountSvcLogs" . | nindent 12 }}
            - name: {{ include "factory.name" . }}-base
              mountPath: /etc/{{ .Values.service.directoryName }}
          {{- if eq .Values.global.currentVersion "v4.2.0" }}
            - name: {{ include "factory.name" . }}-opt
              mountPath: /opt/{{ .Values.service.directoryName }}
          {{- end }}
        - name: {{ include "factory.name" . }}-upgrade
          {{- include "factory.imageContainer" . | indent 10 }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              if [ ! -f /etc/{{ .Values.service.directoryName }}/version ]; then /container_upgrade.sh; if [ $? -eq 0 ]; then echo {{ .Chart.AppVersion }} > /etc/{{ .Values.service.directoryName }}/version ; fi else 'skipping already upgraded to latest version' ; fi
          env:
            - name: CONFIG_DIR
              value: "/etc/{{ .Values.service.directoryName }}"
            - name: COMPONENT_VERSION
              value: {{ .Values.global.currentVersion }}
          envFrom:
            - configMapRef:
                name: {{ include "factory.name" . }}
          volumeMounts:
          {{- include "factory.volumeMountSvcLogs" . | nindent 12 }}
            - name: {{ include "factory.name" . }}-config
              mountPath: /etc/{{ .Values.service.directoryName }}
          {{- if eq .Values.global.currentVersion "v4.2.0" }}
            - name: {{ include "factory.name" . }}-opt
              mountPath: /opt/{{ .Values.service.directoryName }}
          {{- end }}
        {{- end }}
        {{- else if .Values.versionUpgrade }}
        - name: {{ include "factory.name" . }}-backup
          image: busybox:1.32
          command: ["/bin/sh", "-c"]
          args:
            - >
              {{- if eq ".Values.currentVersion" "v4.2.0" }}
              cp -r /opt/{{ .Values.service.directoryName }}/configuration/* /etc/{{ .Values.service.directoryName }}/{{.Chart.AppVersion }}/ &&
              cp -r /opt/{{ .Values.service.directoryName }}/configuration/.setup_done /etc/{{ .Values.service.directoryName }}/{{.Chart.AppVersion }}/
              {{- else }}
              cp -r /etc/{{ .Values.service.directoryName }}/{{ .Values.currentVersion }}/* /etc/{{ .Values.service.directoryName }}/{{ .Chart.AppVersion }}/ &&
              cp -r /etc/{{ .Values.service.directoryName }}/{{ .Values.currentVersion }}/.setup_done /etc/{{ .Values.service.directoryName }}/{{ .Chart.AppVersion }}/
              {{- end }}
          volumeMounts:
            {{- include "factory.volumeMountSvcLogs" . | nindent 12 }}
            - name: {{ include "factory.name" . }}-base
              mountPath: /etc/{{ .Values.service.directoryName }}
          {{- if eq .Values.currentVersion "v4.2.0" }}
            - name: {{ include "factory.name" . }}-opt
              mountPath: /opt/{{ .Values.service.directoryName }}
          {{- end }}
        - name: {{ include "factory.name" . }}-upgrade
          {{- include "factory.imageContainer" . | indent 10 }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              if [ ! -f /etc/{{ .Values.service.directoryName }}/version ]; then /container_upgrade.sh; if [ $? -eq 0 ]; then echo {{ .Chart.AppVersion }} > /etc/{{ .Values.service.directoryName }}/version ; fi else 'skipping already upgraded to latest version' ; fi
          env:
            - name: CONFIG_DIR
              value: "/etc/{{ .Values.service.directoryName }}"
            - name: COMPONENT_VERSION
              value: {{ .Values.currentVersion }}
          envFrom:
            - configMapRef:
                name: {{ include "factory.name" . }}
          volumeMounts:
          {{- include "factory.volumeMountSvcLogs" . | nindent 12 }}
            - name: {{ include "factory.name" . }}-config
              mountPath: /etc/trustagent
          {{- if eq .Values.currentVersion "v4.2.0" }}
            - name: {{ include "factory.name" . }}-opt
              mountPath: /opt/{{ .Values.service.directoryName }}
          {{- end }}
        {{- end }}
      tolerations:
        - key: "untrusted"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
        - key: "untrusted"
          operator: "Equal"
          value: "true"
          effect: "NoExecute"
      {{- include "factory.hostAliases" . | nindent 6 }}
      containers:
        - name: {{ include "factory.name" . }}
          {{- include "factory.imageContainer" . | indent 10 }}
          securityContext:
            privileged: true
          ports:
            - containerPort: {{ .Values.service.ta.containerPort }}
              hostPort: {{ .Values.service.ta.port }}
          envFrom:
            - configMapRef:
                name: {{ include "factory.name" . }}
          env:
            {{- if .Values.global }}
              {{- if .Values.global.proxyEnabled }}
              {{- include "factory.globalProxy" . | nindent 12 }}
              {{- end }}
            {{- end }}
            {{- include "factory.envBearerToken" . | nindent 12 }}
            {{- include "factory.envCmsSha384" . | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - cat
                - /etc/trustagent/.setup_done
            initialDelaySeconds: 5
            failureThreshold: 60
            periodSeconds: 15
          volumeMounts:
            {{- include "factory.volumeMountSvcLogs" . | nindent 12 }}
            - name: {{ include "factory.name" . }}-config
              mountPath: /etc/{{ include "factory.name" . }}/
            - name: {{ include "factory.name" . }}-hostname
              mountPath: /etc/hostname
              readOnly: true
            - name: {{ include "factory.name" . }}-hosts
              mountPath: /etc/hosts
              readOnly: true
            - name: {{ include "factory.name" . }}-host-os
              mountPath: /etc/os-release
              readOnly: true
            - name: {{ include "factory.name" . }}-mem
              mountPath: /dev/mem
              readOnly: true
            - name: {{ include "factory.name" . }}-acpi
              mountPath: /sys/firmware/acpi/tables/TPM2
              readOnly: true
            - name: {{ include "factory.name" . }}-secrets
              mountPath: /etc/secrets/
              readOnly: true
            - name: tpmrm
              mountPath: /dev/tpmrm0
            - name: uefi
              mountPath: /sys/firmware/dmi/tables/DMI
              readOnly: true
            {{- if contains "Workload-Security" .Template.BasePath }}
            - name: wla-config-volume
              mountPath: /etc/workload-agent/
            {{- end }}
            - name: txt-stat
              mountPath: /usr/sbin/txt-stat
      volumes:
        {{- include "factory.volumeSvcLogsDaemonset" . | nindent 8 }}
        - name: {{ include "factory.name" . }}-config
          hostPath:
            path: /etc/trustagent/{{ .Chart.AppVersion }}
            type: DirectoryOrCreate
        - name: {{ include "factory.name" . }}-base
          hostPath:
            path: /etc/trustagent/
            type: DirectoryOrCreate
        - name: {{ include "factory.name" . }}-hostname
          hostPath:
            path: /etc/hostname
            type: File
        - name: {{ include "factory.name" . }}-hosts
          hostPath:
            path: /etc/hosts
            type: File
        - name: {{ include "factory.name" . }}-host-os
          hostPath:
            path: /etc/os-release
            type: File
        - name: {{ include "factory.name" . }}-mem
          hostPath:
            path: /dev/mem
        - name: {{ include "factory.name" . }}-acpi
          hostPath:
            path: /sys/firmware/acpi/tables/TPM2
        - name: tpmrm
          hostPath:
            path: /dev/tpmrm0
        - name: uefi
          hostPath:
            path: /sys/firmware/dmi/tables/DMI
        #TODO: try to handle wla volume better
        - name: wla-config-volume
          hostPath:
            path: /etc/workload-agent
            type: DirectoryOrCreate
        - name: txt-stat
          hostPath:
            path: /usr/sbin/txt-stat
        {{- if .Values.global }}
        {{- if eq .Values.global.currentVersion "v4.2.0" }}
        - name: {{ include "factory.name" . }}-opt
          hostPath:
            path: /opt/trustagent/
        {{- end }}
        {{ else if eq .Values.currentVersion "v4.2.0" }}
        - name: {{ include "factory.name" . }}-opt
          hostPath:
            path: /opt/trustagent/
        {{- end }}
        {{- include "factory.volumeProjectedSecrets" . | nindent 8 }}
        {{- if .Values.config.tpmOwnerSecret }}
          {{- include "factory.volumeCredentials" . | nindent 12 }}
        {{- end }}
        {{- include "factory.volumeAasBearerToken" . | nindent 12 }}
