# Default values for KBS.

nameOverride: "" # The name for KBS chart<br> (Default: `.Chart.Name`)
controlPlaneHostname: <user input> # K8s control plane IP/Hostname<br> (**REQUIRED**)

# Warning: Ensure that the naming is applied consistently for all dependent services when modifying nameOverride
# TODO: Services should be be able to be deployed in different namespaces
dependentServices: # The dependent Service Name for deploying  Key broker Service chart, default is the chart name and override is from nameOverride value.
  cms: cms
  aas: aas

image:
  svc:
    name: <user input> # The image name with which KBS image is pushed to registry<br> (**REQUIRED**)
    pullPolicy: Always  # The pull policy for pulling from container registry for KBS<br> (Allowed values: `Always`/`IfNotPresent`)
    imagePullSecret:  # The image pull secret for authenticating with image registry, can be left empty if image registry does not require authentication
    initName: <user input> # The image name of init container
  aasManager:
    name: <user input> # The image name with which AAS-Manager image is pushed to registry<br> (**REQUIRED**)
    pullPolicy: Always # The pull policy for pulling from container registry for AAS-Manager<br> (Allowed values: `Always`/`IfNotPresent`)
    imagePullSecret:  # The image pull secret for authenticating with image registry, can be left empty if image registry does not require authentication

config:
  keyManager: kmip # The Key manager for KBS (Allowed values: `kmip`)
  kmip:       
    serverIp: <user input> # The KMIP server IP
    serverHostname: <user input> # The KMIP server IP/hostname. Provide same value which is provided during KMIP certificate generation.
    serverPort: <user input> # The KMIP server port
    clientCertPath: /etc/pykmip/certs/client_certificate.pem # The KMIP server client certificate absolute path
    clientKeyPath: /etc/pykmip/certs/client_key.pem # The KMIP server client key absolute path
    rootCertPath: /etc/pykmip/certs/root_certificate.pem # The KMIP server root certificate absolute path

aas:
  url:  # Please update the url section if kbs is exposed via ingress
  secret:
    adminUsername: # Admin Username for AAS
    adminPassword: # Admin Password for AAS

secret:
  installAdminUsername: # Install Admin Username for KBS
  installAdminPassword: # Install Admin Password for KBS

storage:
  nfs:
    server: <user input> # The NFS Server IP/Hostname<br> (**REQUIRED**)
    reclaimPolicy: Retain  # The reclaim policy for NFS<br> (Allowed values: `Retain`/)
    accessModes: ReadWriteMany # The access modes for NFS<br> (Allowed values: `ReadWriteMany`)
    path: /mnt/nfs_share # The path for storing persistent data on NFS
    configSize: 10Mi # The configuration size for storing config for KBS in NFS path
    logsSize: 1Gi # The logs size for storing logs for KBS in NFS path
    baseSize: 1.1Gi # The base volume size (configSize + logSize)
    homeDirSize: 10Mi # The home dir size for storing keys and key-transfer-policy for KBS in NFS path
 
securityContext:
  kbsInit: # The fsGroup id for init containers
    fsGroup: 1001 
  kbs: # The security content for KBS Pod
    runAsUser: 1001
    runAsGroup: 1001
    capabilities:
      drop:
        - all
    allowPrivilegeEscalation: false
  aasManager: # The security content for AAS-MANAGER Pod
    runAsUser: 1001
    runAsGroup: 1001
    capabilities:
      drop:
        - all
    allowPrivilegeEscalation: false
  aasManagerInit: # The fsGroup id for init containers for AAS DB
    fsGroup: 1001

service:
  directoryName: kbs
  cms:
    containerPort: 8445 # The containerPort on which CMS can listen to traffic
  aas:
    containerPort: 8444 # The containerPort on which AAS can listen to traffic
  kbs: 
    containerPort: 9443 # The containerPort on which KBS can listen to traffic
    port: 30448 # The externally exposed NodePort on which KBS can listen to external traffic
  ingress:
    enable: false # Accept true or false to notify ingress rules are enable or disabled